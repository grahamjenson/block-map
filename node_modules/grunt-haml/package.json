{
  "name": "grunt-haml",
  "description": "Process HAML templates to precompiled JavaScript or rendered HTML.",
  "version": "0.5.0",
  "homepage": "https://github.com/concordusapps/grunt-haml",
  "author": {
    "name": "Concordus Applications"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/concordusapps/grunt-haml.git"
  },
  "bugs": {
    "url": "https://github.com/concordusapps/grunt-haml/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/concordusapps/grunt-haml/blob/master/LICENSE"
    }
  ],
  "main": "tasks/haml.js",
  "scripts": {
    "test": "grunt test"
  },
  "engines": {
    "node": "0.10.x"
  },
  "dependencies": {
    "haml": "0.4.x",
    "haml-coffee": "1.10.x",
    "execSync": "0.0.4"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "0.1.x",
    "grunt-contrib-nodeunit": "0.1.x",
    "grunt-contrib-clean": "git://github.com/gruntjs/grunt-contrib-clean.git",
    "grunt-contrib-internal": "0.1.x",
    "grunt": "0.4.x"
  },
  "keywords": [
    "gruntplugin",
    "haml",
    "grunt",
    "js",
    "coffee"
  ],
  "contributors": [
    {
      "name": "Ryan Leckey",
      "url": "https://github.com/mehcode"
    },
    {
      "name": "Andrew Jones",
      "url": "https://github.com/andrewrjones"
    },
    {
      "name": "Hardy Jones",
      "url": "https://github.com/joneshf"
    }
  ],
  "readme": "# grunt-haml [![Build Status](https://secure.travis-ci.org/concordusapps/grunt-haml.png?branch=master)](http://travis-ci.org/concordusapps/grunt-haml)\n\n> Process HAML templates to precompiled JavaScript or rendered HTML.\n\n\n## Getting Started\nIf you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a [gruntfile][Getting Started] as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n\n```shell\nnpm install grunt-haml --save-dev\n```\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n\n\n## Haml task\n_Run this task with the `grunt haml` command._\n\n_This task is a [multi task][] so any targets, files and options should be specified according to the [multi task][] documentation._\n[multi task]: https://github.com/gruntjs/grunt/wiki/Configuring-tasks\n\n\n### Options\n\n#### language\nType: ```string```\nDefault: ```js```\n\nSpecifies the script language and compiler to use alongside HAML.\n\nAccepts following values: ```coffee```, ```js```, or ```ruby```.\nIf given ```coffee``` or ```js``` it will use\n[haml-coffee][] or [haml-js][] respectively. If given ```ruby``` it will\nshell out to the [haml gem] executable.\n\n[haml-coffee]: https://github.com/netzpirat/haml-coffee\n[haml-js]: https://github.com/creationix/haml-js\n[haml gem]: http://rubygems.org/gems/haml\n\n#### target\nType: ```string```\nDefault: ```html```\n\nSpecifies the target language to compile to.\n\nAccepts the following values: ```js``` or ```html```. For ```js``` the template\nis generated and for ```html``` the template is both generated and rendered\ninto its resultant HTML.\n\nIf ```language``` is set to ```ruby``` then ```target```\nmust be set to ```html```.\n\n#### placement\nType: ```string```\nDefault: ```global```\n\nSpecifies where to place the resultant template\n\n*Defined only for target == 'js'.*\n\n#### namespace\nType: ```string```\nDefault: ```window.HAML```\n\nSpecifies the global object to store the compiled HAML templates in.\n\n*Defined only for target == 'js' and placement == 'global'.*\n\n#### name\nType: ```string```\nDefault: basename without extension of the input HAML file\n\nSpecifies the name to store the compiled HAML template as in the object\nspecified by `namespace`.\n\nWith a `name` of 'apple' and a namespace of `this._template`, you'd get\nsomething like this:\n\n```javascript\nwindow.HAML['apple'] =  function(locals) {\n    // template code\n};\n```\n\n*Defined only for target == 'js' and placement == 'global'.*\n\n#### dependencies\nType: ```object```\nDefault: ```{}```\n\nSpecifies any module dependencies of the HAML file that must be loaded via\nthe AMD define statement. These are automatically appended to if there are\nany `require` statements in the HAML code.\n\nWith the following HAML file:\n\n```haml\n!= require('path/to/other')()\n%p Hello World\n```\n\nAnd the following options (in the `Gruntfile.js`):\n\n```javascript\nhaml: {\n  compile: {\n    files: // ...\n    options: {\n      dependencies: {\n        $: 'jquery',\n        _: 'underscore'\n      }\n    }\n  }\n}\n```\n\nThe resultant template would be something like this:\n\n```javascript\ndefine(['jquery', 'underscore', 'path/to/other'], function($, _, other) {\n    // template code\n});\n```\n\n*Defined only for target == 'js'.*\n\n#### bare\nType: ```boolean```\nDefault: ```true```\n\nCompile the JavaScript without the top-level function safety wrapper.\n\n*Defined only for language == 'coffee' and target == 'js'.*\n\n#### rubyHamlCommand\nType: ```string```\nDefault: ```haml -t ugly```\n\nThe shell command which will be ran to compile the HAML. The path to the\nHAML file will be passed as the last command-line argument.\n\n*Defined only for language == 'ruby'\n\n### Usage examples\n\n``` javascript\nhaml: {\n  one: {\n    files: {\n      // 1:1 compile\n      'path/to/result.js': 'path/to/source.haml',\n\n      // compile and concat into single file\n      'path/to/another.js': ['path/to/sources/*.haml', 'path/to/more/*.haml']\n    }\n  },\n\n  // compile individually into dest, maintaining folder structure\n  two: {\n    files: grunt.file.expandMapping(['path/to/*.haml'], 'path/to/dest/', {\n      rename: function(base, path) {\n        return base + path.replace(/\\.haml$/, '.js');\n      }\n    })\n  }\n}\n```\n\n\n## Release History\n\n * 2013-05-27   v0.5.0   Add 'ruby' as a language option Update version of haml-coffee 1.10.x\n * 2013-04-15   v0.4.0   Full support of grunt 0.4.x\n * 2013-03-21   v0.3.2   Corrected placement option to match readme.\n * 2013-01-27   v0.3.1   Update to current version of grunt.\n * 2012-12-19   v0.3.0   Name changed to `grunt-haml` Default target changed to `html`\n * 2012-12-18   v0.1.3   Updated README.\n * 2012-12-18   v0.1.2   Fixed package.json syntax error.\n * 2012-12-18   v0.1.1   Fixed package.json dependencies.\n * 2012-12-18   v0.1.0   Rewrite from scratch (referencing grunt-contrib). Support for full gamut of options.\n * 2012-12-16   v0.0.2   Fixed a syntax error in the package.json (missing comma).\n * 2012-11-06   v0.0.1   Initial release; only slightly modified from what `grunt-contrib-coffee` was at the time.\n\n---\n\nTask submitted by [Ryan Leckey](https://github.com/mehcode)\n\n*This file was generated on Tue May 28 2013 17:29:14.*\n",
  "readmeFilename": "README.md",
  "_id": "grunt-haml@0.5.0",
  "_from": "grunt-haml@"
}
