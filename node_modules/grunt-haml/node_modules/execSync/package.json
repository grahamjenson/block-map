{
  "author": {
    "name": "Mario Gutierrez",
    "email": "mario@mgutz.com"
  },
  "name": "execSync",
  "description": "Synchronous exec when you NEED it.",
  "version": "0.0.4",
  "dependencies": {
    "ffi": "latest"
  },
  "devDependencies": {
    "chai": "~1.5.0",
    "mocha": "~1.9.0"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "mocha test"
  },
  "readme": "# execSync\n\nExecutes shell commands synchronously.\n\n## Motivation\n\nSimplifies build scripts.\n\nExpress 3 has asynchronous templates and helper functions are synchronous.\nSome of my helper functions invoke compilers with async interfaces. I use\nthis library in DEVELOPMENT mode to precompile files on the fly through the\ncommand line.\n\n**NOT RECOMMENDED** on production servers.\n\n\n## Install\n\n    npm install execSync\n\n## Usage\n\nRequire it\n\n    var execSync = require('execSync');\n\nExecute shell commands. `exec` interlaces stdout and stderr to `result.stdout`.\n\n    var result = execSync.exec('echo $USER; echo some_err 1>&2; exit 1');\n    console.log('return code ' + result.code);\n    console.log('stdout + stderr ' + result.stdout);\n\n## Legacy helper functions\n\nCapture STDOUT\n\n    var user = execSync.stdout('echo $USER');\n    console.log('Hello ' + user);\n\nGet result code\n\n    var code = execSync.code('echo $HOME');\n    console.log('result ' + code);\n\n",
  "readmeFilename": "README.md",
  "_id": "execSync@0.0.4",
  "_from": "execSync@0.0.4"
}
